/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import abstracts.Plantable;
import control.ViewController;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import model.*;

/**
 *
 * @author Patrick
 */
public class CreateTimerView extends javax.swing.JDialog {

    private ViewController viewController;
    private SeedRegister seedRegister;
    private SeedBundleRegister seedBundleRegister;
    private SaplingRegister saplingRegister;
    private LivestockRegister livestockRegister;
    private TimerRegister timerRegister;

    /**
     * Creates new form CreateTimerView
     */
    public CreateTimerView(java.awt.Frame parent, boolean modal, ViewController viewController, SeedRegister seedRegister, SeedBundleRegister seedBundleRegister, SaplingRegister saplingRegister, LivestockRegister livestockRegister, TimerRegister timerRegister) {
        super(parent, modal);
        initComponents();
        this.viewController = viewController;
        this.seedRegister = seedRegister;
        this.seedBundleRegister = seedBundleRegister;
        this.saplingRegister = saplingRegister;
        this.livestockRegister = livestockRegister;
        this.timerRegister = timerRegister;

        seedList.setModel(seedRegister.getListModel());
        seedbundleList.setModel(seedBundleRegister.getListModel());
        saplingList.setModel(saplingRegister.getListModel());
        livestockList.setModel(livestockRegister.getListModel());
    }

    private void clean() {
        seedList.clearSelection();
        seedbundleList.clearSelection();
        saplingList.clearSelection();
        livestockList.clearSelection();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPane = new javax.swing.JPanel();
        seedPane = new javax.swing.JPanel();
        seedScrollPane = new javax.swing.JScrollPane();
        seedList = new javax.swing.JList();
        seedbundlePane = new javax.swing.JPanel();
        seedbundleScrollPane = new javax.swing.JScrollPane();
        seedbundleList = new javax.swing.JList();
        saplingPane = new javax.swing.JPanel();
        saplingScrollPane = new javax.swing.JScrollPane();
        saplingList = new javax.swing.JList();
        livestockPane = new javax.swing.JPanel();
        livestockScrollPane = new javax.swing.JScrollPane();
        livestockList = new javax.swing.JList();
        toolPane = new javax.swing.JPanel();
        createButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        deleteSelectedButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        mainPane.setLayout(new java.awt.GridLayout(1, 0));

        seedPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Seeds", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        seedList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        seedList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        seedScrollPane.setViewportView(seedList);

        javax.swing.GroupLayout seedPaneLayout = new javax.swing.GroupLayout(seedPane);
        seedPane.setLayout(seedPaneLayout);
        seedPaneLayout.setHorizontalGroup(
            seedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seedPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(seedScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );
        seedPaneLayout.setVerticalGroup(
            seedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seedPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(seedScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainPane.add(seedPane);

        seedbundlePane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Seed bundles", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        seedbundleList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        seedbundleList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        seedbundleScrollPane.setViewportView(seedbundleList);

        javax.swing.GroupLayout seedbundlePaneLayout = new javax.swing.GroupLayout(seedbundlePane);
        seedbundlePane.setLayout(seedbundlePaneLayout);
        seedbundlePaneLayout.setHorizontalGroup(
            seedbundlePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seedbundlePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(seedbundleScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );
        seedbundlePaneLayout.setVerticalGroup(
            seedbundlePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seedbundlePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(seedbundleScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainPane.add(seedbundlePane);

        saplingPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Saplings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        saplingList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        saplingList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        saplingScrollPane.setViewportView(saplingList);

        javax.swing.GroupLayout saplingPaneLayout = new javax.swing.GroupLayout(saplingPane);
        saplingPane.setLayout(saplingPaneLayout);
        saplingPaneLayout.setHorizontalGroup(
            saplingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saplingPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(saplingScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );
        saplingPaneLayout.setVerticalGroup(
            saplingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saplingPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(saplingScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainPane.add(saplingPane);

        livestockPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Livestock", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        livestockList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        livestockList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        livestockScrollPane.setViewportView(livestockList);

        javax.swing.GroupLayout livestockPaneLayout = new javax.swing.GroupLayout(livestockPane);
        livestockPane.setLayout(livestockPaneLayout);
        livestockPaneLayout.setHorizontalGroup(
            livestockPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(livestockPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(livestockScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );
        livestockPaneLayout.setVerticalGroup(
            livestockPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(livestockPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(livestockScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainPane.add(livestockPane);

        createButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        createButton.setText("Create timer from selected");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        newButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        newButton.setText("New plantable");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        deleteSelectedButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deleteSelectedButton.setText("Delete selected");
        deleteSelectedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSelectedButtonActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Add selected to favorites");

        javax.swing.GroupLayout toolPaneLayout = new javax.swing.GroupLayout(toolPane);
        toolPane.setLayout(toolPaneLayout);
        toolPaneLayout.setHorizontalGroup(
            toolPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteSelectedButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelButton)
                .addContainerGap())
        );
        toolPaneLayout.setVerticalGroup(
            toolPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(toolPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createButton)
                    .addComponent(cancelButton)
                    .addComponent(newButton)
                    .addComponent(deleteSelectedButton)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toolPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        viewController.setViewVisible(ViewController.NEWPLANTABLEVIEW, true);
    }//GEN-LAST:event_newButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void deleteSelectedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSelectedButtonActionPerformed
        int n = JOptionPane.showConfirmDialog(this,
                "Sure you want to delete selected plantables?\nTimers associated with it, will also be deleted!",
                "Delete?",
                JOptionPane.YES_NO_OPTION);

        if (n == 0) {
            Iterator<Seed> seeds = seedList.getSelectedValuesList().iterator();
            Iterator<SeedBundle> seedBundles = seedbundleList.getSelectedValuesList().iterator();
            Iterator<Sapling> saplings = saplingList.getSelectedValuesList().iterator();
            Iterator<Livestock> livestocks = livestockList.getSelectedValuesList().iterator();
            

            while (seeds.hasNext()) {
                Seed s = seeds.next();
                Iterator<Timer> timers = timerRegister.getObjects().iterator();
                while(timers.hasNext()) {
                    Timer t = timers.next();
                    if(t.getPlantable().equals(s)) {
                        timers.remove();
                    }
                }
                seedRegister.delete(s);
            }

            while (seedBundles.hasNext()) {
                SeedBundle s = seedBundles.next();
                Iterator<Timer> timers = timerRegister.getObjects().iterator();
                while(timers.hasNext()) {
                    Timer t = timers.next();
                    if(t.getPlantable().equals(s)) {
                        timers.remove();
                    }
                }
                seedBundleRegister.delete(s);
            }

            while (saplings.hasNext()) {
                Sapling s = saplings.next();
                Iterator<Timer> timers = timerRegister.getObjects().iterator();
                while(timers.hasNext()) {
                    Timer t = timers.next();
                    if(t.getPlantable().equals(s)) {
                        timers.remove();
                    }
                }
                saplingRegister.delete(s);
            }

            while (livestocks.hasNext()) {
                Livestock s = livestocks.next();
                Iterator<Timer> timers = timerRegister.getObjects().iterator();
                while(timers.hasNext()) {
                    Timer t = timers.next();
                    if(t.getPlantable().equals(s)) {
                        timers.remove();
                    }
                }
                livestockRegister.delete(s);
            }
        }
        
    }//GEN-LAST:event_deleteSelectedButtonActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        Iterator<Seed> seeds = seedList.getSelectedValuesList().iterator();
        Iterator<SeedBundle> seedBundles = seedbundleList.getSelectedValuesList().iterator();
        Iterator<Sapling> saplings = saplingList.getSelectedValuesList().iterator();
        Iterator<Livestock> livestocks = livestockList.getSelectedValuesList().iterator();

        while (seeds.hasNext()) {
            Seed s = seeds.next();
            timerRegister.create(s);
        }

        while (seedBundles.hasNext()) {
            SeedBundle s = seedBundles.next();
            timerRegister.create(s);
        }

        while (saplings.hasNext()) {
            Sapling s = saplings.next();
            timerRegister.create(s);
        }

        while (livestocks.hasNext()) {
            Livestock s = livestocks.next();
            timerRegister.create(s);
        }

        dispose();
    }//GEN-LAST:event_createButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        clean();
    }//GEN-LAST:event_formWindowClosed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton createButton;
    private javax.swing.JButton deleteSelectedButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JList livestockList;
    private javax.swing.JPanel livestockPane;
    private javax.swing.JScrollPane livestockScrollPane;
    private javax.swing.JPanel mainPane;
    private javax.swing.JButton newButton;
    private javax.swing.JList saplingList;
    private javax.swing.JPanel saplingPane;
    private javax.swing.JScrollPane saplingScrollPane;
    private javax.swing.JList seedList;
    private javax.swing.JPanel seedPane;
    private javax.swing.JScrollPane seedScrollPane;
    private javax.swing.JList seedbundleList;
    private javax.swing.JPanel seedbundlePane;
    private javax.swing.JScrollPane seedbundleScrollPane;
    private javax.swing.JPanel toolPane;
    // End of variables declaration//GEN-END:variables
}
