/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.FileHandler;
import control.ViewController;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Favorit;
import model.FavoritRegister;
import model.Timer;
import model.TimerRegister;

/**
 *
 * @author Patrick
 */
public class MainView extends javax.swing.JFrame {

    private final ViewController viewController;
    private TimerRegister timerRegister;
    private FavoritRegister favoritRegister;
    private FileHandler fileHandler;

    /**
     * Creates new form MainView
     *
     * @param viewController
     * @param timerRegister
     */
    public MainView(ViewController viewController, TimerRegister timerRegister, FavoritRegister favoritRegister, FileHandler fileHandler) {
        initComponents();
        this.viewController = viewController;
        this.timerRegister = timerRegister;
        this.favoritRegister = favoritRegister;
        this.fileHandler = fileHandler;

        timersTable.setModel(timerRegister.getTableModel());
        favoritsList.setModel(favoritRegister.getListModel());
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPane = new javax.swing.JPanel();
        timersScrollPane = new javax.swing.JScrollPane();
        timersTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        favoritsList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        createTimersFromFavoritsButton = new javax.swing.JButton();
        deleteFavoritsButton = new javax.swing.JButton();
        deleteDonesButton = new javax.swing.JButton();
        deleteTimersButton = new javax.swing.JButton();
        toolBar = new javax.swing.JToolBar();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        doShitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(aaft.AAFT.title);
        setIconImage(aaft.AAFT.icon);
        setMinimumSize(new java.awt.Dimension(1024, 768));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        mainPane.setBackground(new java.awt.Color(153, 153, 153));

        timersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Time remaining", "State"
            }
        ));
        timersTable.setEnabled(false);
        timersScrollPane.setViewportView(timersTable);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        favoritsList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        favoritsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(favoritsList);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Favorits");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        createTimersFromFavoritsButton.setBackground(new java.awt.Color(153, 153, 153));
        createTimersFromFavoritsButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        createTimersFromFavoritsButton.setText("Create timers from selected favorits");
        createTimersFromFavoritsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTimersFromFavoritsButtonActionPerformed(evt);
            }
        });

        deleteFavoritsButton.setBackground(new java.awt.Color(153, 153, 153));
        deleteFavoritsButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deleteFavoritsButton.setText("Delete selected favorits");
        deleteFavoritsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFavoritsButtonActionPerformed(evt);
            }
        });

        deleteDonesButton.setBackground(new java.awt.Color(153, 153, 153));
        deleteDonesButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deleteDonesButton.setText("Delete dones");
        deleteDonesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDonesButtonActionPerformed(evt);
            }
        });

        deleteTimersButton.setBackground(new java.awt.Color(153, 153, 153));
        deleteTimersButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deleteTimersButton.setText("Delete timers");
        deleteTimersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTimersButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPaneLayout = new javax.swing.GroupLayout(mainPane);
        mainPane.setLayout(mainPaneLayout);
        mainPaneLayout.setHorizontalGroup(
            mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPaneLayout.createSequentialGroup()
                        .addComponent(createTimersFromFavoritsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteFavoritsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteDonesButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteTimersButton)
                        .addGap(0, 144, Short.MAX_VALUE))
                    .addComponent(timersScrollPane))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        mainPaneLayout.setVerticalGroup(
            mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createTimersFromFavoritsButton)
                    .addComponent(deleteFavoritsButton)
                    .addComponent(deleteDonesButton)
                    .addComponent(deleteTimersButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timersScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 677, Short.MAX_VALUE))
                .addContainerGap())
        );

        toolBar.setFloatable(false);
        toolBar.setRollover(true);
        toolBar.add(filler1);

        doShitButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        doShitButton.setText("Do shit");
        doShitButton.setFocusable(false);
        doShitButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        doShitButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        doShitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doShitButtonActionPerformed(evt);
            }
        });
        toolBar.add(doShitButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(toolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void doShitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doShitButtonActionPerformed
        viewController.setViewVisible(ViewController.CREATETIMERVIEW, true);
    }//GEN-LAST:event_doShitButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            fileHandler.save();
        } catch (IOException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void createTimersFromFavoritsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTimersFromFavoritsButtonActionPerformed
        List<Favorit> favorits = favoritsList.getSelectedValuesList();

        if (!favorits.isEmpty()) {
            Iterator<Favorit> i = favorits.iterator();

            while (i.hasNext()) {
                Favorit f = i.next();
                timerRegister.create(f.getPlantable());
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "Please choose something!",
                    "Choose!",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_createTimersFromFavoritsButtonActionPerformed

    private void deleteFavoritsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFavoritsButtonActionPerformed
        List<Favorit> favorits = favoritsList.getSelectedValuesList();

        if (!favorits.isEmpty()) {
            Iterator<Favorit> i = favorits.iterator();

            while (i.hasNext()) {
                Favorit f = i.next();
                favoritRegister.delete(f);
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "Please choose something!",
                    "Choose!",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteFavoritsButtonActionPerformed

    private void deleteDonesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDonesButtonActionPerformed
        ArrayList<Timer> timers = timerRegister.getObjects();
        ArrayList<Timer> doneTimers = new ArrayList<>();
        
        for(Timer t : timers) {
            if(timerRegister.getRemainingTime(t) == "Done") {
                doneTimers.add(t);
            }
        }
        
        for(Timer t : doneTimers) {
            timerRegister.delete(t);
        }
    }//GEN-LAST:event_deleteDonesButtonActionPerformed

    private void deleteTimersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTimersButtonActionPerformed
        viewController.setViewVisible(ViewController.DELETETIMERSVIEW, true);
    }//GEN-LAST:event_deleteTimersButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createTimersFromFavoritsButton;
    private javax.swing.JButton deleteDonesButton;
    private javax.swing.JButton deleteFavoritsButton;
    private javax.swing.JButton deleteTimersButton;
    private javax.swing.JButton doShitButton;
    private javax.swing.JList favoritsList;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPane;
    private javax.swing.JScrollPane timersScrollPane;
    private javax.swing.JTable timersTable;
    private javax.swing.JToolBar toolBar;
    // End of variables declaration//GEN-END:variables
}
